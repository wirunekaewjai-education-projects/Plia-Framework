package plia.scene.group.geometry;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

public class Dome
{
	float[] vertices = 
		{
			0.0f, 0.0f, 1.0f, -0.108427994f, 0.35743922f, 0.9238795f, -0.32941788f, 0.17607746f, 0.9238795f, -0.35743916f, -0.10842816f, 0.9238795f, -0.17607726f, -0.32941797f, 0.9238795f, 0.10842839f, -0.3574391f, 0.9238795f, 0.3294181f, -0.17607705f, 0.9238795f, 
			0.357439f, 0.10842861f, 0.9238795f, 0.17607684f, 0.32941824f, 0.9238795f, -4.371139E-8f, 1.0f, 7.54979E-8f, -0.19509032f, 0.98078525f, 7.54979E-8f, -0.3826834f, 0.92387956f, 7.54979E-8f, -0.5555702f, 0.83146966f, 7.54979E-8f, -0.70710677f, 0.70710677f, 
			7.54979E-8f, -0.83146966f, 0.5555702f, 7.54979E-8f, -0.9238796f, 0.38268328f, 7.54979E-8f, -0.9807853f, 0.19509009f, 7.54979E-8f, -1.0f, -3.2584137E-7f, 7.54979E-8f, -0.9807852f, -0.19509073f, 7.54979E-8f, -0.9238793f, -0.38268387f, 7.54979E-8f, -0.8314693f, 
			-0.5555707f, 7.54979E-8f, -0.70710635f, -0.70710725f, 7.54979E-8f, -0.55556965f, -0.83147f, 7.54979E-8f, -0.38268268f, -0.92387986f, 7.54979E-8f, -0.19508946f, -0.9807854f, 7.54979E-8f, 9.655992E-7f, -1.0f, 7.54979E-8f, 0.19509135f, -0.9807851f, 7.54979E-8f, 
			0.38268447f, -0.9238791f, 7.54979E-8f, 0.55557126f, -0.83146894f, 7.54979E-8f, 0.70710766f, -0.7071059f, 7.54979E-8f, 0.8314704f, -0.5555691f, 7.54979E-8f, 0.9238801f, -0.38268209f, 7.54979E-8f, 0.98078555f, -0.19508882f, 7.54979E-8f, 1.0f, 1.605357E-6f, 
			7.54979E-8f, 0.98078495f, 0.19509198f, 7.54979E-8f, 0.92387885f, 0.38268507f, 7.54979E-8f, 0.8314686f, 0.5555718f, 7.54979E-8f, 0.7071054f, 0.70710814f, 7.54979E-8f, 0.5555686f, 0.8314707f, 7.54979E-8f, 0.38268152f, 0.92388034f, 7.54979E-8f, 0.1950882f, 
			0.9807857f, 7.54979E-8f, -4.371139E-8f, 1.0f, -4.371139E-8f, -0.19509032f, 0.98078525f, -4.371139E-8f, -0.3826834f, 0.92387956f, -4.371139E-8f, -0.5555702f, 0.83146966f, -4.371139E-8f, -0.70710677f, 0.70710677f, -4.371139E-8f, -0.83146966f, 0.5555702f, -4.371139E-8f, 
			-0.9238796f, 0.38268328f, -4.371139E-8f, -0.9807853f, 0.19509009f, -4.371139E-8f, -1.0f, -3.2584137E-7f, -4.371139E-8f, -0.9807852f, -0.19509073f, -4.371139E-8f, -0.9238793f, -0.38268387f, -4.371139E-8f, -0.8314693f, -0.5555707f, -4.371139E-8f, -0.70710635f, -0.70710725f, 
			-4.371139E-8f, -0.55556965f, -0.83147f, -4.371139E-8f, -0.38268268f, -0.92387986f, -4.371139E-8f, -0.19508946f, -0.9807854f, -4.371139E-8f, 9.655992E-7f, -1.0f, -4.371139E-8f, 0.19509135f, -0.9807851f, -4.371139E-8f, 0.38268447f, -0.9238791f, -4.371139E-8f, 0.55557126f, 
			-0.83146894f, -4.371139E-8f, 0.70710766f, -0.7071059f, -4.371139E-8f, 0.8314704f, -0.5555691f, -4.371139E-8f, 0.9238801f, -0.38268209f, -4.371139E-8f, 0.98078555f, -0.19508882f, -4.371139E-8f, 1.0f, 1.605357E-6f, -4.371139E-8f, 0.98078495f, 0.19509198f, -4.371139E-8f, 
			0.92387885f, 0.38268507f, -4.371139E-8f, 0.8314686f, 0.5555718f, -4.371139E-8f, 0.7071054f, 0.70710814f, -4.371139E-8f, 0.5555686f, 0.8314707f, -4.371139E-8f, 0.38268152f, 0.92388034f, -4.371139E-8f, 0.1950882f, 0.9807857f, -4.371139E-8f, 0.0f, 0.0f, 
			-4.371139E-8f, -0.07954742f, 0.8076584f, 0.54489505f, -0.38256967f, 0.71573764f, 0.5448951f, -0.62734926f, 0.51485217f, 0.5448951f, -0.7766206f, 0.23558511f, 0.5448951f, -0.8076583f, -0.07954771f, 0.54489505f, -0.7157374f, -0.3825701f, 0.54489505f, -0.5148518f, 
			-0.6273496f, 0.5448951f, -0.23558462f, -0.77662075f, 0.5448951f, 0.079548225f, -0.8076583f, 0.54489505f, 0.38257056f, -0.7157371f, 0.54489505f, 0.6273499f, -0.5148514f, 0.5448951f, 0.77662086f, -0.23558411f, 0.54489505f, 0.80765826f, 0.07954874f, 0.54489505f, 
			0.71573687f, 0.382571f, 0.5448951f, 0.514851f, 0.6273503f, 0.54489505f, 0.23558362f, 0.77662104f, 0.5448951f, 
		};

	
	float[] uv = 
		{
			0.5f, 0.5f, 0.45482174f, 0.351067f, 0.36274257f, 0.42663437f, 0.351067f, 0.54517835f, 0.42663443f, 0.63725746f, 0.5451784f, 0.64893293f, 0.6372575f, 0.57336545f, 0.64893293f, 0.45482147f, 0.57336533f, 0.36274242f, 0.50000006f, 0.08333337f, 0.41871247f, 
			0.09133947f, 0.3405487f, 0.1150502f, 0.26851255f, 0.15355432f, 0.20537227f, 0.20537215f, 0.15355441f, 0.26851237f, 0.11505023f, 0.34054857f, 0.09133953f, 0.41871238f, 0.08333337f, 0.5f, 0.0913395f, 0.5812877f, 0.115050286f, 0.6594515f, 0.15355444f, 
			0.7314877f, 0.20537233f, 0.7946279f, 0.26851258f, 0.84644574f, 0.3405488f, 0.88494986f, 0.41871265f, 0.90866053f, 0.5000003f, 0.9166666f, 0.581288f, 0.9086604f, 0.6594517f, 0.8849496f, 0.73148793f, 0.84644544f, 0.79462814f, 0.7946275f, 0.8464459f, 
			0.7314872f, 0.88495f, 0.65945095f, 0.9086606f, 0.5812871f, 0.9166666f, 0.4999994f, 0.9086604f, 0.41871178f, 0.8849495f, 0.34054798f, 0.84644526f, 0.2685119f, 0.7946273f, 0.20537174f, 0.731487f, 0.15355396f, 0.6594507f, 0.11504996f, 0.58128685f, 
			0.09133935f, 0.50000006f, 0.08333337f, 0.41871247f, 0.09133947f, 0.3405487f, 0.1150502f, 0.26851255f, 0.15355432f, 0.20537227f, 0.20537215f, 0.15355441f, 0.26851237f, 0.11505023f, 0.34054857f, 0.09133953f, 0.41871238f, 0.08333337f, 0.5f, 0.0913395f, 
			0.5812877f, 0.115050286f, 0.6594515f, 0.15355444f, 0.7314877f, 0.20537233f, 0.7946279f, 0.26851258f, 0.84644574f, 0.3405488f, 0.88494986f, 0.41871265f, 0.90866053f, 0.5000003f, 0.9166666f, 0.581288f, 0.9086604f, 0.6594517f, 0.8849496f, 0.73148793f, 
			0.84644544f, 0.79462814f, 0.7946275f, 0.8464459f, 0.7314872f, 0.88495f, 0.65945095f, 0.9086606f, 0.5812871f, 0.9166666f, 0.4999994f, 0.9086604f, 0.41871178f, 0.8849495f, 0.34054798f, 0.84644526f, 0.2685119f, 0.7946273f, 0.20537174f, 0.731487f, 
			0.15355396f, 0.6594507f, 0.11504996f, 0.58128685f, 0.09133935f, 0.5f, 0.5f, 0.46685532f, 0.16347569f, 0.34059608f, 0.20177597f, 0.23860456f, 0.28547817f, 0.17640814f, 0.4018395f, 0.16347572f, 0.5331448f, 0.20177609f, 0.6594041f, 0.28547835f, 
			0.7613956f, 0.40183967f, 0.82359195f, 0.533145f, 0.83652425f, 0.6594043f, 0.79822385f, 0.7613957f, 0.7145214f, 0.82359195f, 0.59816015f, 0.83652425f, 0.46685475f, 0.79822373f, 0.34059548f, 0.7145213f, 0.23860419f, 0.5981599f, 0.17640793f, 

		};
	
	int[] indices = 
		{
			0, 2, 1, 0, 3, 2, 0, 4, 3, 0, 5, 4, 0, 6, 5, 0, 7, 6, 0, 8, 7, 
			0, 1, 8, 1, 75, 74, 1, 76, 75, 2, 77, 76, 2, 78, 77, 3, 79, 78, 3, 80, 
			79, 4, 81, 80, 4, 82, 81, 5, 83, 82, 5, 84, 83, 6, 85, 84, 6, 86, 85, 7, 
			87, 86, 7, 88, 87, 8, 89, 88, 8, 74, 89, 9, 10, 42, 10, 11, 43, 11, 12, 44, 
			12, 13, 45, 13, 14, 46, 14, 15, 47, 15, 16, 48, 16, 17, 49, 17, 18, 50, 18, 19, 
			51, 19, 20, 52, 20, 21, 53, 21, 22, 54, 22, 23, 55, 23, 24, 56, 24, 25, 57, 25, 
			26, 58, 26, 27, 59, 27, 28, 60, 28, 29, 61, 29, 30, 62, 30, 31, 63, 31, 32, 64, 
			32, 33, 65, 33, 34, 66, 34, 35, 67, 35, 36, 68, 36, 37, 69, 37, 38, 70, 38, 39, 
			71, 39, 40, 72, 40, 9, 41, 73, 41, 42, 73, 42, 43, 73, 43, 44, 73, 44, 45, 73, 
			45, 46, 73, 46, 47, 73, 47, 48, 73, 48, 49, 73, 49, 50, 73, 50, 51, 73, 51, 52, 
			73, 52, 53, 73, 53, 54, 73, 54, 55, 73, 55, 56, 73, 56, 57, 73, 57, 58, 73, 58, 
			59, 73, 59, 60, 73, 60, 61, 73, 61, 62, 73, 62, 63, 73, 63, 64, 73, 64, 65, 73, 
			65, 66, 73, 66, 67, 73, 67, 68, 73, 68, 69, 73, 69, 70, 73, 70, 71, 73, 71, 72, 
			73, 72, 41, 74, 10, 9, 75, 11, 74, 75, 12, 11, 76, 13, 75, 76, 14, 13, 77, 15, 
			76, 77, 16, 15, 78, 17, 77, 78, 18, 17, 79, 19, 78, 79, 20, 19, 80, 21, 79, 80, 
			22, 21, 81, 23, 80, 81, 24, 23, 82, 25, 81, 82, 26, 25, 83, 27, 82, 83, 28, 27, 
			84, 29, 83, 84, 30, 29, 85, 31, 84, 85, 32, 31, 86, 33, 85, 86, 34, 33, 87, 35, 
			86, 87, 36, 35, 88, 37, 87, 88, 38, 37, 89, 39, 88, 89, 40, 39, 74, 9, 89, 1, 
			2, 76, 2, 3, 78, 3, 4, 80, 4, 5, 82, 5, 6, 84, 6, 7, 86, 7, 8, 88, 
			8, 1, 74, 42, 41, 9, 43, 42, 10, 44, 43, 11, 45, 44, 12, 46, 45, 13, 47, 46, 
			14, 48, 47, 15, 49, 48, 16, 50, 49, 17, 51, 50, 18, 52, 51, 19, 53, 52, 20, 54, 
			53, 21, 55, 54, 22, 56, 55, 23, 57, 56, 24, 58, 57, 25, 59, 58, 26, 60, 59, 27, 
			61, 60, 28, 62, 61, 29, 63, 62, 30, 64, 63, 31, 65, 64, 32, 66, 65, 33, 67, 66, 
			34, 68, 67, 35, 69, 68, 36, 70, 69, 37, 71, 70, 38, 72, 71, 39, 41, 72, 40, 11, 
			10, 74, 13, 12, 75, 15, 14, 76, 17, 16, 77, 19, 18, 78, 21, 20, 79, 23, 22, 80, 
			25, 24, 81, 27, 26, 82, 29, 28, 83, 31, 30, 84, 33, 32, 85, 35, 34, 86, 37, 36, 
			87, 39, 38, 88, 9, 40, 89, 
		};
	
	private static FloatBuffer vb;
	private static FloatBuffer uvb;
	private static IntBuffer ib;
	
	private Dome()
	{
		vb = ByteBuffer.allocateDirect(vertices.length * 4).order(ByteOrder.nativeOrder()).asFloatBuffer();
		vb.put(vertices).position(0);

		uvb = ByteBuffer.allocateDirect(uv.length * 4).order(ByteOrder.nativeOrder()).asFloatBuffer();
		uvb.put(uv).position(0);
		
		ib = ByteBuffer.allocateDirect(indices.length * 4).order(ByteOrder.nativeOrder()).asIntBuffer();
		ib.put(indices).position(0);
	}
	
	public static FloatBuffer getVB()
	{
		return vb;
	}

	public static FloatBuffer getUVB()
	{
		return uvb;
	}
	
	public static IntBuffer getIB()
	{
		return ib;
	}
	
	private static Dome instance = new Dome();
	public static Dome getInstance()
	{
		return instance;
	}
}
